"""add predefined meal system and insulin dose meal context

Revision ID: a076cccc29a9
Revises: ddac211329f5
Create Date: 2025-08-08 08:32:17.093386

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'a076cccc29a9'
down_revision: Union[str, Sequence[str], None] = 'ddac211329f5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('predefined_meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('predefined_meal_ingredients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('predefined_meal_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('base_weight', sa.Float(), nullable=False),
    sa.Column('carbs_per_100g', sa.Float(), nullable=False),
    sa.Column('glycemic_index', sa.Float(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['predefined_meal_id'], ['predefined_meals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('insulin_doses', sa.Column('meal_context', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('insulin_doses', sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('meals', sa.Column('is_predefined', sa.Boolean(), nullable=True))
    op.execute("UPDATE meals SET is_predefined = false WHERE is_predefined IS NULL")
    op.alter_column('meals', 'is_predefined', nullable=False)
    op.add_column('meals', sa.Column('predefined_meal_id', sa.Integer(), nullable=True))
    op.add_column('meals', sa.Column('quantity', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'meals', 'predefined_meals', ['predefined_meal_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'meals', type_='foreignkey')
    op.drop_column('meals', 'quantity')
    op.drop_column('meals', 'predefined_meal_id')
    op.drop_column('meals', 'is_predefined')
    op.drop_column('insulin_doses', 'note')
    op.drop_column('insulin_doses', 'meal_context')
    op.drop_table('predefined_meal_ingredients')
    op.drop_table('predefined_meals')
    # ### end Alembic commands ###
